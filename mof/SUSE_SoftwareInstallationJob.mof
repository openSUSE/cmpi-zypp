//#pragma namespace ("root/cimv2")


// -------------------------------------------------------------------
// *******************************************************************
//      Classes
// *******************************************************************
// -------------------------------------------------------------------



// ===================================================================
//      SUSE_SoftwareInstallationJob
// ===================================================================

[ Provider("cmpi:cmpi-zypp"),
  Description ("A Class which provide SoftwareInstallationJob.")
]
class SUSE_SoftwareInstallationJob : CIM_ConcreteJob
{
  [Key, Override ( "InstanceID" ),
                   Description (
                   "Within the scope of the instantiating Namespace, "
                   "InstanceID opaquely and uniquely identifies an instance "
                   "of this class. In order to ensure uniqueness within the "
                   "NameSpace, the value of InstanceID SHOULD be constructed "
                   "using the following \'preferred\' algorithm: \n"
                   "<OrgID>:<LocalID> \n"
                   "Where <OrgID> and <LocalID> are separated by a colon "
                   "\':\', and where <OrgID> must include a copyrighted, "
                   "trademarked or otherwise unique name that is owned by "
                   "the business entity that is creating or defining the "
                   "InstanceID, or that is a registered ID that is assigned "
                   "to the business entity by a recognized global authority. "
                   "(This requirement is similar to the <Schema Name>_<Class "
                   "Name> structure of Schema class names.) In addition, to "
                   "ensure uniqueness <OrgID> must not contain a colon "
                   "(\':\'). When using this algorithm, the first colon to "
                   "appear in InstanceID must appear between <OrgID> and "
                   "<LocalID>. \n"
                   "<LocalID> is chosen by the business entity and should "
                   "not be re-used to identify different underlying "
                   "(real-world) elements. If the above \'preferred\' "
                   "algorithm is not used, the defining entity must assure "
                   "that the resulting InstanceID is not re-used across any "
                   "InstanceIDs produced by this or other providers for the "
                   "NameSpace of this instance. \n"
                   "For DMTF defined instances, the \'preferred\' algorithm "
                   "must be used with the <OrgID> set to \'CIM\'." )]
                   string InstanceID;

  [Required, Override ( "Name" ),
                   Description (
                   "The user-friendly name for this instance of a Job. In "
                   "addition, the user-friendly name can be used as a "
                   "property for a search or query. (Note: Name does not "
                   "have to be unique within a namespace.)" )]
                   string Name;

  [Override ("JobState"), Description (
                   "JobState is an integer enumeration that indicates the "
                   "operational state of a Job. It can also indicate "
                   "transitions between these states, for example, \'Shutting "
                   "Down\' and \'Starting\'. Following is a brief "
                   "description of the states: \n"
                   "New (2) indicates that the job has never been started. \n"
                   "Starting (3) indicates that the job is moving from the "
                   "\'New\', \'Suspended\', or \'Service\' states into the "
                   "\'Running\' state. \n"
                   "Running (4) indicates that the Job is running. \n"
                   "Suspended (5) indicates that the Job is stopped, but can "
                   "be restarted in a seamless manner. \n"
                   "Shutting Down (6) indicates that the job is moving to a "
                   "\'Completed\', \'Terminated\', or \'Killed\' state. \n"
                   "Completed (7) indicates that the job has completed "
                   "normally. \n"
                   "Terminated (8) indicates that the job has been stopped "
                   "by a \'Terminate\' state change request. The job and all "
                   "its underlying processes are ended and can be restarted "
                   "(this is job-specific) only as a new job. \n"
                   "Killed (9) indicates that the job has been stopped by a "
                   "\'Kill\' state change request. Underlying processes "
                   "might have been left running, and cleanup might be "
                   "required to free up resources. \n"
                   "Exception (10) indicates that the Job is in an abnormal "
                   "state that might be indicative of an error condition. "
                   "Actual status might be displayed though job-specific "
                   "objects. \n"
                   "Service (11) indicates that the Job is in a "
                   "vendor-specific state that supports problem discovery, "
                   "or resolution, or both.\n"
                   "Query pending (12) waiting for a client to resolve a "
                   "query." ),
                   ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10",
                   "11", "12", "13..32767", "32768..65535" },
                   Values { "New", "Starting", "Running", "Suspended",
                   "Shutting Down", "Completed", "Terminated", "Killed",
                   "Exception", "Service", "Query Pending", "DMTF Reserved",
                   "Vendor Reserved" }]
                   uint16 JobState;

  [Override ("PercentComplete"), Description (
                   "The percentage of the job that has completed at the time "
                   "that this value is requested. Note that this property is "
                   "also present in the JobProcessingStatistics class. This "
                   "class is necessary to capture the processing information "
                   "for recurring Jobs, because only the \'last\' run data "
                   "can be stored in this single-valued property. \n" ),
                   Units ( "Percent" ),
                   MinValue ( 0 ),
                   MaxValue ( 100 ),
                   PUnit ( "percent" )]
                   uint16 PercentComplete;

  [Override ("ErrorCode"), Description (
                   "A vendor-specific error code. The value must be set to "
                   "zero if the Job completed without error. Note that this "
                   "property is also present in the JobProcessingStatistics "
                   "class. This class is necessary to capture the processing "
                   "information for recurring Jobs, because only the \'last\' "
                   "run error can be stored in this single-valued property." ),
                   ModelCorrespondence { "CIM_Job.ErrorDescription" }]
                   uint16 ErrorCode;

  [Override ("ErrorDescription"), Description (
                   "A free-form string that contains the vendor error "
                   "description. Note that this property is also present in "
                   "the JobProcessingStatistics class. This class is "
                   "necessary to capture the processing information for "
                   "recurring Jobs, because only the \'last\' run error can "
                   "be stored in this single-valued property." ),
                   ModelCorrespondence { "CIM_Job.ErrorCode" }]
                   string ErrorDescription;

   [Description (
                  "The question which needs an answer before the job can continue running."
                  "Null indicate that there is no question")]
                  string QueryQuestion;

   [Description (
                 "Define which answers are possible to answer the current question"),
                 ValueMap { "0", "1", "2", "3", "4",
                 "..", "0x8000..0xFFFF" },
                 Values { "Unknown", "Other", "Yes", "No", "Cancel",
                 "DMTF Reserved", "Vendor Reserved" },
                 ArrayType ( "Indexed" )]
                 uint16 AllowedAnswers[];

   [Description ("Method to answer a question. Unknown is set is an answer is provided "
                 "which is not part of the current AllowedAnswers array"),
   ValueMap { "0", "1", "2" },
   Values { "Success", "Unknown", "Error"}]
   uint32 ProvideAnswer(
       [IN, Description("The answer for the current question")]
       uint16 answer);
};


